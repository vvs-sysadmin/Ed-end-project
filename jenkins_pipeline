pipeline {
    agent none
    stages {
        stage('Job 1') {
            agent { node { label 'jenkins_slave' } }
            steps {
                sh 'sudo apt install -y puppet-agent'
                sh 'sudo /opt/puppetlabs/bin/puppet resource service puppet ensure=running enable=true'
                sh 'sudo /opt/puppetlabs/bin/puppet agent --test --master kmaster.ap-south-1.compute.internal &'
            }
        }
        stage('Job 2') {
            agent { node { label 'master' } }
            steps {
                sh 'sudo /opt/puppetlabs/bin/puppetserver ca list'
                sh 'sudo /opt/puppetlabs/bin/puppetserver ca sign --certname kslave1.ap-south-1.compute.internal '
            }
        }
        stage('Job 3') {
            agent { node { label 'jenkins_slave' } }
            steps {
                catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                    sh 'sudo /opt/puppetlabs/bin/puppet agent -t'
                }
            }
        }
		stage('Job 4 - Git pull') {
            agent { node { label 'jenkins_slave' } }
            steps {
                sh 'cd /home/edk/Cert_Project/'
	            sh 'git pull https://github.com/vvs-sysadmin/Ed-end-project.git'
	            sh 'cp -pr /var/lib/jenkis/workspace/Cert_Project/* /home/edk/Cert_Project/'
		         }
		    }
        stage('Job 4 - run docker file') {
            agent { node { label 'jenkins_slave' } }
            steps {
                script {
                    try{
                        sh 'cd /home/edk/Cert_Project/'
                        sh 'sudo docker build -t final_project /home/edk/Cert_Project/'
                        sh 'sudo docker run -itd -p 8080:80 --name Final_Project final_project'
                    }
                    catch(Exception e){
                        sh 'sudo docker rm -f Final_Project'
                    }
                }
            }
        }
        stage('Job 4: Test with selenium') {
          agent { node { label 'jenkins_slave' } }
            steps {
                script {
                    try{
                        sh 'cd /home/edk/Cert_Project/'
                        sh 'java -jar /home/edk/Cert_Project/seleniumTest.jar'
                    }
                    catch(Exception e){
                        sh 'sudo docker rm -f Final_Project'
                    }
                }
            }
        }
    }
}
